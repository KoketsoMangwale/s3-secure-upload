service: secure-upload-system

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  memorySize: 128
  timeout: 10
  environment:
    S3_BUCKET: ${self:service}-files-${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/SecureUploadTokens
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/SecureUploadLogs
        - Effect: Allow
          Action:
            - s3:PutObject
          Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*

functions:
  generateToken:
    handler: handler/generate_token.lambda_handler
    events:
      - httpApi:
          path: /generate-token
          method: post

  getPresignedUrl:
    handler: handler/get_presigned_url.lambda_handler
    events:
      - httpApi:
          path: /upload-url/{token}
          method: get

  confirmUpload:
    handler: handler/confirm_upload.lambda_handler
    events:
      - httpApi:
          path: /upload/confirm/{token}
          method: post

resources:
  Resources:
    UploadTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SecureUploadTokens
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    UploadLogsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SecureUploadLogs
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
